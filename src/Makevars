#------------------------------------------------------------------------------
#   src/Makevars file for building R package ParallelForest
#   Copyright (C) 2014  Bertram Ieong
#	No warranty.
#------------------------------------------------------------------------------

#####  Objects that will be needed  #####
OBJECTS = \
utils.o random_utils.o tree_utils.o sort_utils.o \
impurity_measures.o classification.o forest_parallel.o \
grow_tree_wrapper.o predict_tree_wrapper.o \
grow_forest_wrapper.o predict_forest_wrapper.o \
fortran_unit_tests_wrapper.o

#####  Compiler flags  #####
PKG_FCFLAGS = $(SHLIB_OPENMP_FCFLAGS)
PKG_LIBS = $(SHLIB_OPENMP_FCFLAGS)

#####  Phony target for R's build system to invoke  #####
all: $(SHLIB)

#####  Declare dependencies and make instructions for objects  #####
tree_utils.o: utils.o \
tree_utils.f90
	$(FC) $(PKG_FCFLAGS) $(FCPICFLAGS) $(FCFLAGS) -c  tree_utils.f90 -o tree_utils.o

sort_utils.o: utils.o \
sort_utils.f90
	$(FC) $(PKG_FCFLAGS) $(FCPICFLAGS) $(FCFLAGS) -c  sort_utils.f90 -o sort_utils.o

impurity_measures.o: utils.o \
impurity_measures.f90
	$(FC) $(PKG_FCFLAGS) $(FCPICFLAGS) $(FCFLAGS) -c  impurity_measures.f90 -o impurity_measures.o

classification.o: utils.o tree_utils.o sort_utils.o impurity_measures.o \
classification.f90
	$(FC) $(PKG_FCFLAGS) $(FCPICFLAGS) $(FCFLAGS) -c  classification.f90 -o classification.o

forest_parallel.o: utils.o random_utils.o tree_utils.o sort_utils.o impurity_measures.o classification.o \
forest_parallel.f90
	$(FC) $(PKG_FCFLAGS) $(FCPICFLAGS) $(FCFLAGS) -c  forest_parallel.f90 -o forest_parallel.o

grow_tree_wrapper.o: utils.o tree_utils.o classification.o \
grow_tree_wrapper.f90
	$(FC) $(PKG_FCFLAGS) $(FCPICFLAGS) $(FCFLAGS) -c  grow_tree_wrapper.f90 -o grow_tree_wrapper.o

predict_tree_wrapper.o: utils.o tree_utils.o classification.o \
predict_tree_wrapper.f90
	$(FC) $(PKG_FCFLAGS) $(FCPICFLAGS) $(FCFLAGS) -c  predict_tree_wrapper.f90 -o predict_tree_wrapper.o

grow_forest_wrapper.o: utils.o tree_utils.o classification.o forest_parallel.o \
grow_forest_wrapper.f90
	$(FC) $(PKG_FCFLAGS) $(FCPICFLAGS) $(FCFLAGS) -c  grow_forest_wrapper.f90 -o grow_forest_wrapper.o

predict_forest_wrapper.o: utils.o tree_utils.o classification.o forest_parallel.o \
predict_forest_wrapper.f90
	$(FC) $(PKG_FCFLAGS) $(FCPICFLAGS) $(FCFLAGS) -c  predict_forest_wrapper.f90 -o predict_forest_wrapper.o

fortran_unit_tests_wrapper.o: random_utils.o forest_parallel.o classification.o tree_utils.o sort_utils.o \
fortran_unit_tests_wrapper.f90
	$(FC) $(PKG_FCFLAGS) $(FCPICFLAGS) $(FCFLAGS) -c  fortran_unit_tests_wrapper.f90 -o fortran_unit_tests_wrapper.o

#####  Clean target  #####
clean:
	rm -f *.o *.mod
